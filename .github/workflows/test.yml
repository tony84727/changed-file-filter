name: "build-test"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        npm install
        npm run all
  test-1:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ./
      id: filter
      with:
        filters: |
          test:
            - testzone/*.txt
    - name: Check Output
      run: '[[ "${{ steps.filter.outputs.test }}" = "false" ]]'
  test-2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup committer info
      run:
        - git config user.name 'Github Action'
        - git config user.email 'action@github.com'
    # add a fake commit
    - name: Add Commit
      run: | 
        mkdir testzone && \
        touch testzone/touched.txt && \
        git add testzone/touched.txt && \
        git commit -m "add testzone/touched.txt"
    - uses: ./
      id: filter
      with:
        filters: |
          test:
            - testzone/*.txt
        # Override ${{ github.event.pull_request.head.sha }} to HEAD for testing
        head: 'HEAD'
    - name: Check Output
      run: '[[ "${{ steps.filter.outputs.test }}" = "true" ]]'
  # test case of issue #7
  test-3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup committer info
        run:
          - git config user.name 'Github Action'
          - git config user.email 'action@github.com'
      - name: Add Commit
        run: |
          mkdir testzone && \
          touch testzone/added_by_this_pr.txt && \
          git checkout -b this_pr && \
          git add testzone/added_by_this_pr.txt && \
          git commit -m "add by this PR"
      - name: Move Base
        id: move_base
        run: |
          git checkout -b base ${{ github.event.pull_request.base.sha }} && \
          touch testzone/added_by_other_pr.txt && \
          git add testzone/added_by_other_pr.txt  && \
          git commit -m "another merged PR" && \
          echo "::set-output name=base::$(git rev-parse HEAD)" && \
          git checkout this_pr
      - uses: ./
        id: filter
        with:
          # for testing, set the base to moved base, simulating the situation that the base changed (probably another PR
          # got merged into the master)
          base: ${{ steps.move_base.outputs.base }}
          filters: |
            this_pr:
              - testzone/added_by_this_pr.txt
            test:
              - testzone/*.txt
      - name: Check Output
        # Although "base" has a additional commit modifying the filter matching file "testzone/*.txt" (testzone/added_by_other_pr),
        # the file is already merged in the "base"
        run: '[[ "${{ steps.filter.outputs.test }}" = "false" && "${{ steps.filter.outputs.this_pr }}" = "true" ]]'
    